<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_generative_ai_validator">
    <sys_generative_ai_validator action="INSERT_OR_UPDATE">
        <active>true</active>
        <name>Now LLM Summary Response Validator</name>
        <sys_class_name>sys_generative_ai_validator</sys_class_name>
        <sys_created_by>robert.peerenboom@snc</sys_created_by>
        <sys_created_on>2024-11-22 19:17:40</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>eddbda5947c2da501d7d4f5c416d43f5</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Now LLM Summary Response Validator</sys_name>
        <sys_overrides/>
        <sys_package display_value="UXC Generative AI" source="sn_uxc_gen_ai">1923d9ddd1d22110f877c76675ff5b9d</sys_package>
        <sys_policy/>
        <sys_scope display_value="RobNaskSkill001">b227129d4782da501d7d4f5c416d43e1</sys_scope>
        <sys_update_name>sys_generative_ai_validator_eddbda5947c2da501d7d4f5c416d43f5</sys_update_name>
        <sys_updated_by>robert.peerenboom@snc</sys_updated_by>
        <sys_updated_on>2024-11-22 19:17:40</sys_updated_on>
        <validator_script><![CDATA[(function(payload) {
    var output = JSON.parse(payload.response).sections;
    var extractedOutput = {};
    output.forEach(extract);

    function extract(item) {
        var values = item.content.split("- ");
        var valuesObj = values
            .filter(value => value !== "")
            .map(value => ({
                "value": value
            }));
        extractedOutput[item.key] = valuesObj;
    }

    payload["response"][0] = JSON.stringify(extractedOutput);
    return payload;
})(payload);]]></validator_script>
    </sys_generative_ai_validator>
</record_update>
