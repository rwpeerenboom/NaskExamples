<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_generative_ai_validator">
    <sys_generative_ai_validator action="INSERT_OR_UPDATE">
        <active>true</active>
        <name>OpenAI Full History Postprocessor</name>
        <sys_class_name>sys_generative_ai_validator</sys_class_name>
        <sys_created_by>robert.peerenboom@snc</sys_created_by>
        <sys_created_on>2024-11-22 19:17:40</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>e9dbda5947c2da501d7d4f5c416d43a0</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>OpenAI Full History Postprocessor</sys_name>
        <sys_overrides/>
        <sys_package display_value="Now Assist Skill Discovery and Execution" source="sn_vad_genai">3ab59df253e2b1103c2cddeeff7b1247</sys_package>
        <sys_policy/>
        <sys_scope display_value="RobNaskSkill001">b227129d4782da501d7d4f5c416d43e1</sys_scope>
        <sys_update_name>sys_generative_ai_validator_e9dbda5947c2da501d7d4f5c416d43a0</sys_update_name>
        <sys_updated_by>robert.peerenboom@snc</sys_updated_by>
        <sys_updated_on>2024-11-22 19:17:40</sys_updated_on>
        <validator_script><![CDATA[(function(payload) {
	var input = payload.input || {};
	var _meta = input._meta;
	var prompt = input.prompt || input.user_message;
	if (!_meta) {
		// missing _meta, exit early
		return payload;
	}
	var conversationId = _meta.conversationId;
	if (!conversationId) {
		// not part of a conversation, exit early
		return payload;
	}
	
	new sn_vad_genai.VAGenAIValidatorUtil().getAndUpdateMessageHistory(payload, conversationId, prompt);
	return payload;
})(payload);
]]></validator_script>
    </sys_generative_ai_validator>
</record_update>
